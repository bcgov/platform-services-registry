apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: platform-registry
metadata:
  name: platform-registry-network-policies
objects:
  - apiVersion: security.devops.gov.bc.ca/v1alpha1
    kind: NetworkSecurityPolicy
    metadata:
      name: any-to-any
    spec:
      description: |
        allow all pods to communicate
      source:
        - - "$namespace=${NAMESPACE}"
      destination:
        - - "$namespace=*"
  - apiVersion: security.devops.gov.bc.ca/v1alpha1
    kind: NetworkSecurityPolicy
    metadata:
      name: any-to-external
    spec:
      description: |
        Allow all pods to talk to external systems
      source:
        - - "$namespace=${NAMESPACE}"
      destination:
        - - "ext:network=any"
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: deny-by-default
    spec:
      podSelector: {}
      ingress: []
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector: {}
      policyTypes:
        - Ingress
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-api-to-patroni
    spec:
      # Allow the API to talk to the patroni
      # database cluster on the given port.
      podSelector:
        matchLabels:
          statefulset: registry-patroni
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: api
          ports:
            - protocol: TCP
              port: 5432
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-flyway-to-patroni
    spec:
      # Allow flyway pre-hook pod to run
      # db migration check on patroni
      # each time api deployment rolls out
      podSelector:
        matchLabels:
          statefulset: registry-patroni
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  openshift.io/deployer-pod.type: hook-pre
          ports:
            - protocol: TCP
              port: 5432
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-patroni-replication
    spec:
      # Allow the patroni pods to replicate
      podSelector:
        matchLabels:
          statefulset: registry-patroni
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  statefulset: registry-patroni
          ports:
            - protocol: TCP
              port: 5432
            - protocol: TCP
              port: 8008
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-patroni-backup
    spec:
      # Allow the backup container to talk to the
      # patroni database cluster.
      podSelector:
        matchLabels:
          statefulset: registry-patroni
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: db-backup
          ports:
            - protocol: TCP
              port: 5432
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: allow-api-to-nats
    spec:
      # Allow the API to talk to NATS. This policy really only
      # applies to dev and test. No impact in prod.
      podSelector:
        matchLabels:
          role: nats
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: api
          ports:
            - protocol: TCP
              port: 4222
parameters:
  - name: NAMESPACE
    displayName: Namespace
    description: |
      The namespace this policy is being deployed to;
    required: true
