name: Install Docker Compose and Run Custom Script
description: Installs Docker Compose v2 and runs a custom bash script
inputs:
  script:
    description: The bash script to execute
    required: true
    default: ''
runs:
  using: composite
  steps:
  - name: Install Docker Compose v2
    shell: bash
      # See https://docs.docker.com/compose/install/linux/
    run: |
      DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
      mkdir -p $DOCKER_CONFIG/cli-plugins
      curl -SL https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
      chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
      docker compose version

  - name: Run Docker Compose and Custom Script
    shell: bash
    run: |
      mkdir -p ./localdev/mnt/{mongodb,postgres}

      images=(
          "ghcr.io/bcgov/pltsvc-localdev-keycloak:latest"
          "ghcr.io/bcgov/pltsvc-localdev-keycloak-provision:latest"
          "ghcr.io/bcgov/pltsvc-localdev-nats-provision:latest"
      )

      for image in "${images[@]}"; do
          docker pull "$image"
      done

      export MACHINE_HOST_IP=$(hostname -I | awk '{print $1}')
      DOCKER_COMPOSE="$HOME/.docker/cli-plugins/docker-compose -f localdev/docker-compose.yml -f localdev/docker-compose-ci.yml"
      $DOCKER_COMPOSE up -d

      node_modules/.bin/wait-on http://localhost:8080/health/ready http://localhost:4040 --timeout 120000
      print("wait-on complete!")
      until $DOCKER_COMPOSE logs --tail=1 -f keycloak-provision | tee >(grep -q "complete!") ; do sleep 2; done && echo "keycloak-provision complete!"

      echo "Running script..."
      ${{ inputs.script }}

      $DOCKER_COMPOSE down
      sudo rm -rf ./localdev/mnt
