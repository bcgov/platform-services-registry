name: 52.Terraform - Keycloak

on:
  push:
    branches:
    - main
    paths:
    - terraform/keycloak/**
    - .github/workflows/terraform-keycloak.yml
  pull_request:
    paths:
    - terraform/keycloak/**
    - .github/workflows/terraform-keycloak.yml

jobs:
  terraform:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    environment:
      name: tf-keycloak
    steps:
    - uses: hmarr/debug-action@f7318c783045ac39ed9bb497e22ce835fdafbfe6
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@dfbd9912672664f9df2023c1c16e07bcf306043c
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: ${{ vars.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: true

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      working-directory: ./terraform/keycloak

    - name: Terraform Variables
      run: |
        cat >"ci.auto.tfvars" <<EOF
        dev_client_secret = "${{ secrets.DEV_CLIENT_SECRET }}"
        test_client_secret = "${{ secrets.TEST_CLIENT_SECRET }}"
        prod_client_secret = "${{ secrets.PROD_CLIENT_SECRET }}"
        EOF

      working-directory: ./terraform/keycloak

    - name: Terraform Init
      id: init
      run: terraform init -upgrade
      working-directory: ./terraform/keycloak

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: |
        PLAN_OUTPUT=$(terraform plan -no-color)
        echo "${PLAN_OUTPUT}"
        echo "PLAN<<EOF" >> $GITHUB_ENV
        echo "${PLAN_OUTPUT}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      working-directory: ./terraform/keycloak
      continue-on-error: true

    - name: Create Comment
      uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const planDetail = process.env.PLAN || "No plan output available.";

          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>

          \`\`\`\n${planDetail}\n\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: ./terraform/keycloak
