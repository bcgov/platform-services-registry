name: 51.Terraform - Sysdig

on:
  push:
    branches:
    - main
    paths:
    - terraform/sysdig/**
    - .github/workflows/terraform-sysdig.yml
  pull_request:
    paths:
    - terraform/sysdig/**
    - .github/workflows/terraform-sysdig.yml

jobs:
  terraform:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    environment:
      name: tf-sysdig
    steps:
    - uses: hmarr/debug-action@f7318c783045ac39ed9bb497e22ce835fdafbfe6
    - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

    - name: Set Terraform Version
      run: echo "TF_VERSION=$(cat .terraform-version)" >> $GITHUB_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@2f1b53ffa558af27b90742f3f28397d986061ece
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@dfbd9912672664f9df2023c1c16e07bcf306043c
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: ${{ vars.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: true

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      working-directory: ./terraform/sysdig

    - name: Terraform Variables
      run: |
        cat >"ci.auto.tfvars" <<EOF
        silver_101ed4_team_sysdig_monitor_api_token="${{ secrets.SILVER_101ED4_TEAM_SYSDIG_MONITOR_API_TOKEN }}"
        EOF

      working-directory: ./terraform/sysdig

    - name: Terraform Init
      id: init
      run: terraform init -upgrade
      working-directory: ./terraform/sysdig

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      working-directory: ./terraform/sysdig
      continue-on-error: true

    - name: Create Comment
      uses: actions/github-script@3908079ba1e7bce10117ad701c321d07e89017a9
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
          #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: ./terraform/sysdig
