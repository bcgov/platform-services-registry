name: 06.Dispatch Maintenance

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        default: dev
        type: choice
        options: [dev, test, prod]
      status:
        description: Maintenance status to set
        type: choice
        required: true
        options: ['true', 'false']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  toggle-maintenance:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
    environment:
      name: ${{ inputs.environment }}

    steps:
    - uses: hmarr/debug-action@f7318c783045ac39ed9bb497e22ce835fdafbfe6
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      with:
        ref: main

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@dfbd9912672664f9df2023c1c16e07bcf306043c
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: ${{ vars.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: true

    - name: Deploy apps with Helm chart
      run: |
        helm dependency update
        helm upgrade pltsvc . \
        --reuse-values \
        --set app.maintenance.enabled=${{ inputs.status }} \
        -n ${{ vars.OPENSHIFT_NAMESPACE }} \
        -f values.yaml \
        -f values-${{ vars.OPENSHIFT_NAMESPACE }}.yaml
      working-directory: ./helm/main

    - name: Notify RocketChat on Success
      if: success()
      uses: ./.github/actions/rocketchat-notification
      with:
        webhook-url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
        data: |
          {
            "text": ":rocket: Maintenance Mode ${{ inputs.status }} deployed successfully in ${{ inputs.environment }}!"
          }

    - name: Notify RocketChat on Failure
      if: failure()
      uses: ./.github/actions/rocketchat-notification
      with:
        webhook-url: ${{ secrets.ROCKETCHAT_WEBHOOK_URL }}
        data: |
          {
            "text": ":warning: Maintenance Mode deployment failed in ${{ inputs.environment }}!"
          }
