# See https://helm.sh/docs/chart_template_guide/subcharts_and_globals/#global-chart-values
global:
  licensePlate: 101ed4
  vault:
    # licensePlate-nonprod or licensePlate-prod
    role:
    # sub-path of the vault secret
    subPath:
    podAnnotations:
      # See https://developer.hashicorp.com/vault/docs/platform/k8s/injector/annotations#agent-annotations
      vault.hashicorp.com/auth-path: auth/k8s-silver
      vault.hashicorp.com/namespace: platform-services
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/agent-inject-token: "false"
      vault.hashicorp.com/agent-pre-populate: "true"
      vault.hashicorp.com/agent-pre-populate-only: "true"
      vault.hashicorp.com/agent-requests-cpu: 50m
      vault.hashicorp.com/agent-limits-cpu: 100m
      vault.hashicorp.com/agent-requests-mem: 32Mi
      vault.hashicorp.com/agent-limits-mem: 64Mi
  env:
    "Env": ""

  serviceAccountName: 101ed4-vault

nameOverride: secdash
fullnameOverride: secdash

dags:
  sha:
  # The following configurations will be populated dynamically by the Makefile
  # based on the DAG filenames in the dag directory.
  volumeMounts: []

# See https://github.com/apache/airflow/blob/main/chart/values.yaml
airflow:
  enabled: true
  route:
    host:

  fullnameOverride: airflow
  nameOverride: airflow
  useStandardNaming: true

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L46
  uid:
  gid:

  defaultAirflowRepository: ghcr.io/bcgov/pltsvc-secdashboard-airflow
  defaultAirflowTag: "4692f1e60d8f00f302d476059284449ea722ac1e" # pragma: allowlist secret

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L77
  airflowVersion: "2.7.3"

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L80
  images:
    useDefaultImageForMigration: true
    migrationsWaitTimeout: 60

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L257
  rbac:
    create: true
    createSCCRoleBinding: false

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L264
  executor: KubernetesExecutor

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L370
  extraEnvFrom: | # pragma: allowlist secret
    - secretRef:
        name: airflow-variables

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L379
  data:
    metadataSecretName: secdash-postgresql # pragma: allowlist secret
    # metadataConnection:
    #   user: nonroot
    #   pass: nonroot
    #   protocol: postgresql
    #   host: secdash-postgresql
    #   port: 5432
    #   db: airflow

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L430
  webserverSecretKeySecretName: secdash-airflow-webserver # pragma: allowlist secret

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L490
  workers:
    extraVolumes:
      - name: secdash-airflow-dags
        persistentVolumeClaim:
          claimName: secdash-airflow-dags
      - name: secdash-airflow-shared
        persistentVolumeClaim:
          claimName: secdash-airflow-shared
    extraVolumeMounts:
      - name: secdash-airflow-dags
        mountPath: /opt/airflow/dags
      - name: secdash-airflow-shared
        mountPath: /opt/airflow/shared

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L770
  scheduler:
    replicas: 1
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 200Mi

    extraVolumes:
      - name: secdash-airflow-dags
        persistentVolumeClaim:
          claimName: secdash-airflow-dags
      - name: secdash-airflow-shared
        persistentVolumeClaim:
          claimName: secdash-airflow-shared
    extraVolumeMounts:
      - name: secdash-airflow-dags
        mountPath: /opt/airflow/dags
      - name: secdash-airflow-shared
        mountPath: /opt/airflow/shared

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L1130
  webserver:
    replicas: 1
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 50m
        memory: 500Mi

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L1342
  triggerer:
    enabled: false

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L1807
  statsd:
    enabled: false

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L2278
  postgresql:
    enabled: false

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L2298
  config:
    core:
      dag_concurrency: 5
      max_active_runs_per_dag: 1
      min_serialized_dag_update_interval: 10
      min_serialized_dag_fetch_interval: 5
      dags_are_paused_at_creation: False
    webserver:
      web_server_worker_timeout: 300
      workers: 2

    smtp:
      smtp_host: apps.smtp.gov.bc.ca
      smtp_starttls: false
      smtp_mail_from: pltsvc@gov.bc.ca

    scheduler:
      min_file_process_interval: 30

    kubernetes_executor:
      run_as_user: "{{ .Values.uid }}"
      delete_worker_pods: "True"

  # See https://github.com/apache/airflow/blob/4a4913c6f729756b528a0f0095c0273e853bc197/chart/values.yaml#L2397
  dags:
    persistence:
      enabled: false

    gitSync:
      enabled: false

# See https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  enabled: true
  primary:
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
    persistence:
      size: 1Gi
  readReplicas:
    persistence:
      size: 1Gi
  global:
    postgresql:
      auth:
        database: airflow
        username: nonroot
        replicationUsername: replication
        existingSecret: secdash-postgresql # pragma: allowlist secret
        secretKeys:
          adminPasswordKey: admin-password # pragma: allowlist secret
          userPasswordKey: user-password # pragma: allowlist secret
          replicationPasswordKey: replication-password # pragma: allowlist secret

# See https://github.com/SonarSource/helm-chart-sonarqube/blob/master/charts/sonarqube/values.yaml
sonarqube:
  enabled: true
  route:
    host:

  # See https://github.com/SonarSource/helm-chart-sonarqube/blob/87cf0af9db9e573476803b811f95edc7088169f6/charts/sonarqube/values.yaml#L37
  securityContext:
    fsGroup:

  # See https://github.com/SonarSource/helm-chart-sonarqube/blob/87cf0af9db9e573476803b811f95edc7088169f6/charts/sonarqube/values.yaml#L41C1-L41C25
  containerSecurityContext:
    runAsUser:
    runAsGroup:

  initContainers:
    securityContext:
      runAsUser:
      runAsGroup:

  # See https://github.com/SonarSource/helm-chart-sonarqube/blob/87cf0af9db9e573476803b811f95edc7088169f6/charts/sonarqube/values.yaml#L236C1-L236C11
  initSysctl:
    enabled: false

  # See https://github.com/SonarSource/helm-chart-sonarqube/blob/8aa02077c479aa2f5d7e205c0e158b8d81938ea1/charts/sonarqube/values.yaml#L366
  resources:
    limits:
      cpu: 800m
      memory: 3Gi
    requests:
      cpu: 400m
      memory: 2Gi

  # See https://github.com/SonarSource/helm-chart-sonarqube/blob/87cf0af9db9e573476803b811f95edc7088169f6/charts/sonarqube/values.yaml#L420C1-L420C14
  jdbcOverwrite:
    enable: true
    jdbcUrl: "jdbc:postgresql://secdash-postgresql/testdb?socketTimeout=1500"
    jdbcUsername: nonroot
    jdbcSecretName: secdash-postgresql # pragma: allowlist secret
    jdbcSecretPasswordKey: user-password # pragma: allowlist secret

  postgresql:
    enabled: false
