{{- $deploymentTag := .Values.image.tag | default .Chart.AppVersion -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- $podAnnotations := merge (.Values.podAnnotations | default dict) (.Values.global.vault.podAnnotations | default dict) -}}
      {{- with $podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        vault.hashicorp.com/role: {{ .Values.global.vault.role }}
        vault.hashicorp.com/agent-inject-secret-secrets.env: {{ .Values.global.vault.role }}/{{ .Values.global.vault.subPath }}
        vault.hashicorp.com/agent-inject-template-secrets.env: |
          {{`{{ with secret "`}}{{ .Values.global.vault.role }}/{{ .Values.global.vault.subPath }}{{`" -}}
            export PUBLIC_CLOUD_CLIENT_ID='{{ .Data.data.AWS_ROLES_CLIENT_ID }}'
            export PUBLIC_CLOUD_CLIENT_SECRET='{{ .Data.data.AWS_ROLES_CLIENT_SECRET }}'
          {{- end }}`}}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- $imagePullSecrets := concat (.Values.imagePullSecrets | default list) (.Values.global.imagePullSecrets | default list) -}}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ default .Values.global.serviceAccountName .Values.serviceAccountName }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ $deploymentTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DEPLOYMENT_TAG
              value: {{ $deploymentTag | quote }}
          {{- $env := merge (.Values.global.env | default dict) (.Values.env | default dict) -}}
            {{ range $k, $v := $env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
            {{- end }}
          {{- if .Values.envSecretName }}
          envFrom:
            - secretRef:
                name: {{ .Values.envSecretName }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
